//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Testing.FluentRespository.ServiceReferences
{
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "ITestServiceBasedOnSQLCEOf_Department")]
    public interface ITestServiceBasedOnSQLCEOf_Department
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/Insert", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/InsertResponse")]
        void Insert(TestEFDomainAndContext.TestDomains.Department item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/Insert", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/InsertResponse")]
        System.Threading.Tasks.Task InsertAsync(TestEFDomainAndContext.TestDomains.Department item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/Update", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/UpdateResponse")]
        void Update(TestEFDomainAndContext.TestDomains.Department item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/Update", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(TestEFDomainAndContext.TestDomains.Department item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/Delete", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/DeleteResponse")]
        void Delete(TestEFDomainAndContext.TestDomains.Department item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/Delete", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Department/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(TestEFDomainAndContext.TestDomains.Department item);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestServiceBasedOnSQLCEOf_DepartmentChannel : ITestServiceBasedOnSQLCEOf_Department, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceBasedOnSQLCEOf_DepartmentClient : System.ServiceModel.ClientBase<ITestServiceBasedOnSQLCEOf_Department>, ITestServiceBasedOnSQLCEOf_Department
    {

        public TestServiceBasedOnSQLCEOf_DepartmentClient()
        {
        }

        public TestServiceBasedOnSQLCEOf_DepartmentClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public TestServiceBasedOnSQLCEOf_DepartmentClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public TestServiceBasedOnSQLCEOf_DepartmentClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public TestServiceBasedOnSQLCEOf_DepartmentClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public void Insert(TestEFDomainAndContext.TestDomains.Department item)
        {
            base.Channel.Insert(item);
        }

        public System.Threading.Tasks.Task InsertAsync(TestEFDomainAndContext.TestDomains.Department item)
        {
            return base.Channel.InsertAsync(item);
        }

        public void Update(TestEFDomainAndContext.TestDomains.Department item)
        {
            base.Channel.Update(item);
        }

        public System.Threading.Tasks.Task UpdateAsync(TestEFDomainAndContext.TestDomains.Department item)
        {
            return base.Channel.UpdateAsync(item);
        }

        public void Delete(TestEFDomainAndContext.TestDomains.Department item)
        {
            base.Channel.Delete(item);
        }

        public System.Threading.Tasks.Task DeleteAsync(TestEFDomainAndContext.TestDomains.Department item)
        {
            return base.Channel.DeleteAsync(item);
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName = "ITestServiceBasedOnSQLCEOf_Employee")]
    public interface ITestServiceBasedOnSQLCEOf_Employee
    {

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/Insert", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/InsertResponse")]
        void Insert(TestEFDomainAndContext.TestDomains.Employee item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/Insert", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/InsertResponse")]
        System.Threading.Tasks.Task InsertAsync(TestEFDomainAndContext.TestDomains.Employee item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/Update", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/UpdateResponse")]
        void Update(TestEFDomainAndContext.TestDomains.Employee item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/Update", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(TestEFDomainAndContext.TestDomains.Employee item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/Delete", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/DeleteResponse")]
        void Delete(TestEFDomainAndContext.TestDomains.Employee item);

        [System.ServiceModel.OperationContractAttribute(Action = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/Delete", ReplyAction = "http://tempuri.org/ITestServiceBasedOnSQLCEOf_Employee/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(TestEFDomainAndContext.TestDomains.Employee item);
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestServiceBasedOnSQLCEOf_EmployeeChannel : ITestServiceBasedOnSQLCEOf_Employee, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestServiceBasedOnSQLCEOf_EmployeeClient : System.ServiceModel.ClientBase<ITestServiceBasedOnSQLCEOf_Employee>, ITestServiceBasedOnSQLCEOf_Employee
    {

        public TestServiceBasedOnSQLCEOf_EmployeeClient()
        {
        }

        public TestServiceBasedOnSQLCEOf_EmployeeClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public TestServiceBasedOnSQLCEOf_EmployeeClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public TestServiceBasedOnSQLCEOf_EmployeeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public TestServiceBasedOnSQLCEOf_EmployeeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        public void Insert(TestEFDomainAndContext.TestDomains.Employee item)
        {
            base.Channel.Insert(item);
        }

        public System.Threading.Tasks.Task InsertAsync(TestEFDomainAndContext.TestDomains.Employee item)
        {
            return base.Channel.InsertAsync(item);
        }

        public void Update(TestEFDomainAndContext.TestDomains.Employee item)
        {
            base.Channel.Update(item);
        }

        public System.Threading.Tasks.Task UpdateAsync(TestEFDomainAndContext.TestDomains.Employee item)
        {
            return base.Channel.UpdateAsync(item);
        }

        public void Delete(TestEFDomainAndContext.TestDomains.Employee item)
        {
            base.Channel.Delete(item);
        }

        public System.Threading.Tasks.Task DeleteAsync(TestEFDomainAndContext.TestDomains.Employee item)
        {
            return base.Channel.DeleteAsync(item);
        }
    }
}
